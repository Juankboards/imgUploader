<style>
	button {
		border-radius: 50px;
		width: 80%;
		max-width: 150px;
		height: 45px;
		color: #fcfcfc;
		font-size: 1.05rem;
		background-color: #0EADFF;
		border: 1px transparent;
		cursor: pointer;
	}
	button:disabled {
		background-color: #AAA;
	}
	#album {
		display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-gap: 15px;
    justify-items: stretch;
    align-items: center;
	}
	#album .photo {
		position: relative;
	}
	#album .photo h2 {
		text-align: center;
	    position: absolute;
	    padding: 10px;
	    left: 50%;
	    transform: translateX(-50%);
	    top: 30%;
	    background-color: rgba(255,255,255,.6);
	    border-radius: 5px;
	    text-transform: uppercase;
	}
	#album .photo img {
		width: 100%;
		padding: 5px;
	}
	#album i {
		position: absolute;
		bottom: 20px;
	    right: 20px;
	    background-color: transparent;
	    color: #f0f0f0;
	    font-size: 25px;
	    cursor: pointer;
	}
	#files {
		display: none;
	}
	#album .photo i:hover {
		color: #af0e40;
	}
	#result .thumbnail-wrapper {
		position: relative;
	}
	.thumbnail {
		width: 100px;
	}
	#clear {
		background-color: #CC0E00;
	}
	button#clear:disabled {
		background-color: #AAA;
	}
	#clear, #upload-imgs {
		display:none;
	}
	#result {
		border: 4px dotted #0EADFF;
		display: none;
		margin:10px auto;
		width: 100%;
		justify-content: space-around;
		flex-wrap: wrap;
		padding: 10px;
		align-items: center;
	}
	
	#result .thumbnail-wrapper .trash {
		display: none;
		position: absolute;
		font-size: 25px;
		color: #F0F0F0;
		background-color: transparent;
		bottom: 8px;
		right: 6px;
	}
	#result .prev-image:hover {
		-webkit-filter: grayscale(100%); /* Safari 6.0 - 9.0 */
  	filter: grayscale(100%);
	}
	#result .prev-image:hover .trash {
		display: block;
	}
	.spinner {
  /* changing --size & --circle-size will adjust size of the spinner */
  --size: 100%;
--circle-size: 0.2rem;
--color: 0,143,215 !important;
  --vertical-horizontal-offset: calc(5 * var(--circle-size));
  --diagonal-offset: calc(3.5 * var(--circle-size));
  /* changing --color will adjust the color of the spinner */
  --color: 255, 255, 255;
  transition: transform 1s ease-in-out;
  min-height: var(--size);
  min-width: var(--size);
  position: relative;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.spinner::after {
    display: block;
    content: '';
    border-radius: 50%;
    position: absolute;
    left: 50%;
    top: 50%;
    height: var(--circle-size);
    width: var(--circle-size);
    animation: rotate 1s steps(8) infinite;
    box-shadow:
      /* top circle */
      0 calc(-1 * var(--vertical-horizontal-offset)) 0 var(--circle-size) rgba(var(--color), 1),
      /* top-right circle */
      var(--diagonal-offset) calc(-1 * var(--diagonal-offset)) 0 var(--circle-size) rgba(var(--color), 0.7),
      /* right circle */
      var(--vertical-horizontal-offset) 0 0 var(--circle-size) rgba(var(--color), 0.5),
      /* bottom-right circle */
      var(--diagonal-offset) var(--diagonal-offset) 0 var(--circle-size) rgba(var(--color), 0.3),
      /* bottom circle */
      0 var(--vertical-horizontal-offset) 0 var(--circle-size) rgba(var(--color), 0.2),
      /* bottom-left circle */
      calc(-1 * var(--diagonal-offset)) var(--diagonal-offset) 0 var(--circle-size) rgba(var(--color), 0.2),
      /* left circle */
      calc(-1 * var(--vertical-horizontal-offset)) 0 0 var(--circle-size) rgba(var(--color), 0.15),
       /* top-left circle */
      calc(-1 * var(--diagonal-offset)) calc(-1 * var(--diagonal-offset)) 0 var(--circle-size) rgba(var(--color), 0.4);
}
.waiting{
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		display: flex;
		justify-content: center;
		align-items: center;
		background-color: rgba(255,255,255,.7);
	}
	.waiting i{
		background-color: transparent;
		color: #000;
		font-size: 1.9rem;
	}
	#select-images{
		z-index: 1;
		max-width: 197px;
		position: fixed;
		bottom: 1rem;
		right: -webkit-calc(50% - 48rem);
		right: expression(50% - 48rem);
		right: -moz-calc(50% - 48rem);
		right: -o-calc(50% - 48rem);
		right: calc(50% - 48rem);
		cursor: pointer;
		font-weight: bold;
	}
	h1{
		height: 4rem;
		display: flex;
		max-width: 15rem;
		justify-content: center;
		align-items: center;
		border-bottom: 2px solid #0EADFF;
		border-top: 2px solid #0EADFF;
		margin: 10px auto 50px;
		cursor: default;
		font-weight: 100;
		text-transform: uppercase;
		font-size: 1.7rem;
		white-space: nowrap;
	}

	@media (-webkit-min-device-pixel-ratio: 2), 
    (min-resolution: 192dpi), (max-width: 100rem) {
			#select-images{
				right: 2rem;
			}
		}
	@media (-webkit-min-device-pixel-ratio: 2), 
    (min-resolution: 192dpi), (max-width: 75rem) {
			#album {
				grid-template-columns: 1fr 1fr 1fr;
			}
			#select-images{
				right: 2rem;
				bottom: 0.5rem;
			}
    }
	 @media (-webkit-min-device-pixel-ratio: 2), 
    (min-resolution: 192dpi), (max-width: 56rem) {
			#album {
				grid-template-columns: 1fr 1fr;
			}
    }
		 @media (-webkit-min-device-pixel-ratio: 2), 
    (min-resolution: 192dpi), (max-width: 35rem) {
			#album {
				grid-template-columns: 1fr;
			}
    }
</style>
{{> nav }}
<section>
	<h1>{{ album.name }}</h1>
	<input onchange="loadImgs(event)" id="files" type="file" multiple/>
	<button onclick="openBrowseWindow(event)" id="select-images">+ Select Images</button>
	<output id="result"></output>
	<button onclick="uploadImgs()" type="button" id="upload-imgs">Upload</button>
	<button onclick="clearPrevImgs()" type="button" id="clear">Clear</button>
	<div id="album">
		{{#each album.photos as |photo|}}
		  <div class="photo">
				<i onclick="deleteImg(event)" class="fas fa-trash"></i>
		  	<img src="{{ photo }}" />
		  </div>
		{{/each}}
	</div>
</section>